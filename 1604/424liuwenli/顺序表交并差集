#include <stdio.h>
#include <stdlib.h>
#define Size 50

typedef struct
{
    int elem[Size];
    int last;
}List;

void Difference(List La,List Lb,List Lc);
void Union(List La,List Lb);
void Intersection(List La,List Lb,List Lc);
void Sort(List L,int n);

int main()
{
    int i;
    List La,Lb,Lc;
    printf("请输入集合A,集合B元素的个数:\n");
    scanf("%d %d",&La.last,&La.last);
    printf("请输入集合A的元素:\n");
    for (i = 0; i < La.last; i++)
    {
        scanf("%d", &La.elem[i]);
    }

    printf("请输入集合B的元素:\n");
    for (i = 0; i < Lb.last; i++)
    {
        scanf("%d", &Lb.elem[i]);
    }

    Union(La,Lb);//实例化的时候不用加上数据类型List
    Intersection(La,Lb,Lc);
    Difference(La,Lb,Lc);

    return 0;
}
void Difference(List La,List Lb,List Lc)
{
        int i,j,d=0,m;
        for(i=0;i<La.last;i++)
        {
            m=0;
            for(j=0;j<Lb.last;j++)
            {
                if(La.elem[i]!=Lb.elem[j])
                {
                    m++;
                }
            }
            if(m==Lb.last)//m走到最后说明La.elem[i]与Lb所有元素不同(差)
            {
                Lc.elem[d++]=La.elem[i];//存到Lc中
            }
        }
        Sort(Lc,d);
        printf("La-Lb:\n");
        for(i=0;i<d;i++)
        {
            printf("%d",Lc.elem[i]);
        }
        printf("\n");
}
void Union(List La,List Lb)
{
    int i,j,k;
    for(i==0;i<Lb.last;i++)
    {
        k=Lb.elem[i];
        j=0;
        while((j<La.last)&&(La.elem[j]!=k))
            j++;
        if(j==La.last)//j走到最后说明k与La的所有元素不同,
        {
            La.elem[La.last]=k;//记录在La的末尾(并)
            La.last++;
        }
    }
    Sort(La,La.last);
    printf("La+Lb:\n");
    for(i=0;i<La.last;i++)
    {
        printf("%d",La.elem[i]);
    }
    printf("\n");
}
void Intersection(List La,List Lb,List Lc)
{
    int i,j,d=0;
    for(i=0;i<La.last;i++)
    {
        for(j=0;i<Lb.last;j++)
        {
            if(La.elem[i]==Lb.elem[j])//把相同的存在Lc中(交)
            {
                Lc.elem[d++]=La.elem[i];
                break;
            }
        }
    }
    Sort(Lc,d);
    printf("La*Lb:\n");
    for(i=0;i<d;i++)
    {
        printf("%d",Lc.elem[i]);
    }
    printf("\n");
}

void Sort(List L,int n)//冒泡排序
{
    int i,j,temp;
    for(i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(L.elem[j]<L.elem[i])
            {
                temp=L.elem[j];
                L.elem[j]=L.elem[i];
                L.elem[i]=temp;
            }
        }
    }
}
